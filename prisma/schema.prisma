// datasource and generator setup
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ---------------------------------------------------------
//  ENUMS
// ---------------------------------------------------------

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

// ---------------------------------------------------------
//  MODELS
// ---------------------------------------------------------

model User {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  email        String  @unique
  password     String
  fullName     String
  gender       String?
  profileImage String?
  phoneNumber  String?
  role         Role    @default(USER)
  fcmToken     String?
  address      String?

  isOnline   Boolean @default(false)
  isVerified Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  notifications Notifications[] @relation("Notifications")

  Otp Otp[]

  @@map("users")
}

model Otp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  otp       Int
  hexCode   String?
  expiry    DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId

  @@map("otps")
}

model Notifications {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  receiverId String   @db.ObjectId
  senderId   String   @db.ObjectId
  title      String
  body       String
  read       Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [receiverId], references: [id], name: "Notifications")

  @@map("notifications")
}

model building {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  address     String
  information String
  wings       String
  units       String?
  shops       String

  longitude Float?
  latitude  Float?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("buildings")
}

model payment {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  amount      Float
  description String
  dateline    DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("payments")
}
